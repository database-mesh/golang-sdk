//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2022.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/apis/meta/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActualDatanodesExpressionValue) DeepCopyInto(out *ActualDatanodesExpressionValue) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActualDatanodesExpressionValue.
func (in *ActualDatanodesExpressionValue) DeepCopy() *ActualDatanodesExpressionValue {
	if in == nil {
		return nil
	}
	out := new(ActualDatanodesExpressionValue)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActualDatanodesNodeValue) DeepCopyInto(out *ActualDatanodesNodeValue) {
	*out = *in
	if in.Nodes != nil {
		in, out := &in.Nodes, &out.Nodes
		*out = make([]ValueFrom, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActualDatanodesNodeValue.
func (in *ActualDatanodesNodeValue) DeepCopy() *ActualDatanodesNodeValue {
	if in == nil {
		return nil
	}
	out := new(ActualDatanodesNodeValue)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActualDatanodesValue) DeepCopyInto(out *ActualDatanodesValue) {
	*out = *in
	if in.ValueSource != nil {
		in, out := &in.ValueSource, &out.ValueSource
		*out = new(ValueSourceType)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActualDatanodesValue.
func (in *ActualDatanodesValue) DeepCopy() *ActualDatanodesValue {
	if in == nil {
		return nil
	}
	out := new(ActualDatanodesValue)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CircuitBreak) DeepCopyInto(out *CircuitBreak) {
	*out = *in
	if in.Regex != nil {
		in, out := &in.Regex, &out.Regex
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CircuitBreak.
func (in *CircuitBreak) DeepCopy() *CircuitBreak {
	if in == nil {
		return nil
	}
	out := new(CircuitBreak)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConcurrencyControl) DeepCopyInto(out *ConcurrencyControl) {
	*out = *in
	if in.Regex != nil {
		in, out := &in.Regex, &out.Regex
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConcurrencyControl.
func (in *ConcurrencyControl) DeepCopy() *ConcurrencyControl {
	if in == nil {
		return nil
	}
	out := new(ConcurrencyControl)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionProbe) DeepCopyInto(out *ConnectionProbe) {
	*out = *in
	if in.Probe != nil {
		in, out := &in.Probe, &out.Probe
		*out = new(Probe)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionProbe.
func (in *ConnectionProbe) DeepCopy() *ConnectionProbe {
	if in == nil {
		return nil
	}
	out := new(ConnectionProbe)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataShard) DeepCopyInto(out *DataShard) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataShard.
func (in *DataShard) DeepCopy() *DataShard {
	if in == nil {
		return nil
	}
	out := new(DataShard)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataShard) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataShardList) DeepCopyInto(out *DataShardList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DataShard, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataShardList.
func (in *DataShardList) DeepCopy() *DataShardList {
	if in == nil {
		return nil
	}
	out := new(DataShardList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataShardList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataShardSpec) DeepCopyInto(out *DataShardSpec) {
	*out = *in
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]ShardingRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataShardSpec.
func (in *DataShardSpec) DeepCopy() *DataShardSpec {
	if in == nil {
		return nil
	}
	out := new(DataShardSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataShardStatus) DeepCopyInto(out *DataShardStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataShardStatus.
func (in *DataShardStatus) DeepCopy() *DataShardStatus {
	if in == nil {
		return nil
	}
	out := new(DataShardStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Database) DeepCopyInto(out *Database) {
	*out = *in
	if in.MySQL != nil {
		in, out := &in.MySQL, &out.MySQL
		*out = new(MySQL)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Database.
func (in *Database) DeepCopy() *Database {
	if in == nil {
		return nil
	}
	out := new(Database)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseChaos) DeepCopyInto(out *DatabaseChaos) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseChaos.
func (in *DatabaseChaos) DeepCopy() *DatabaseChaos {
	if in == nil {
		return nil
	}
	out := new(DatabaseChaos)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DatabaseChaos) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseChaosCondition) DeepCopyInto(out *DatabaseChaosCondition) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseChaosCondition.
func (in *DatabaseChaosCondition) DeepCopy() *DatabaseChaosCondition {
	if in == nil {
		return nil
	}
	out := new(DatabaseChaosCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseChaosEvent) DeepCopyInto(out *DatabaseChaosEvent) {
	*out = *in
	if in.Timestamp != nil {
		in, out := &in.Timestamp, &out.Timestamp
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseChaosEvent.
func (in *DatabaseChaosEvent) DeepCopy() *DatabaseChaosEvent {
	if in == nil {
		return nil
	}
	out := new(DatabaseChaosEvent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseChaosList) DeepCopyInto(out *DatabaseChaosList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DatabaseChaos, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseChaosList.
func (in *DatabaseChaosList) DeepCopy() *DatabaseChaosList {
	if in == nil {
		return nil
	}
	out := new(DatabaseChaosList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DatabaseChaosList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseChaosRecord) DeepCopyInto(out *DatabaseChaosRecord) {
	*out = *in
	if in.Events != nil {
		in, out := &in.Events, &out.Events
		*out = make([]DatabaseChaosEvent, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseChaosRecord.
func (in *DatabaseChaosRecord) DeepCopy() *DatabaseChaosRecord {
	if in == nil {
		return nil
	}
	out := new(DatabaseChaosRecord)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseChaosSpec) DeepCopyInto(out *DatabaseChaosSpec) {
	*out = *in
	in.Selector.DeepCopyInto(&out.Selector)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseChaosSpec.
func (in *DatabaseChaosSpec) DeepCopy() *DatabaseChaosSpec {
	if in == nil {
		return nil
	}
	out := new(DatabaseChaosSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseChaosStatus) DeepCopyInto(out *DatabaseChaosStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]DatabaseChaosCondition, len(*in))
		copy(*out, *in)
	}
	if in.Records != nil {
		in, out := &in.Records, &out.Records
		*out = make([]*DatabaseChaosRecord, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(DatabaseChaosRecord)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseChaosStatus.
func (in *DatabaseChaosStatus) DeepCopy() *DatabaseChaosStatus {
	if in == nil {
		return nil
	}
	out := new(DatabaseChaosStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseClass) DeepCopyInto(out *DatabaseClass) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseClass.
func (in *DatabaseClass) DeepCopy() *DatabaseClass {
	if in == nil {
		return nil
	}
	out := new(DatabaseClass)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DatabaseClass) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseClassList) DeepCopyInto(out *DatabaseClassList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DatabaseClass, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseClassList.
func (in *DatabaseClassList) DeepCopy() *DatabaseClassList {
	if in == nil {
		return nil
	}
	out := new(DatabaseClassList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DatabaseClassList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseClassSpec) DeepCopyInto(out *DatabaseClassSpec) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseClassSpec.
func (in *DatabaseClassSpec) DeepCopy() *DatabaseClassSpec {
	if in == nil {
		return nil
	}
	out := new(DatabaseClassSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseClassStatus) DeepCopyInto(out *DatabaseClassStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseClassStatus.
func (in *DatabaseClassStatus) DeepCopy() *DatabaseClassStatus {
	if in == nil {
		return nil
	}
	out := new(DatabaseClassStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseEndpoint) DeepCopyInto(out *DatabaseEndpoint) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseEndpoint.
func (in *DatabaseEndpoint) DeepCopy() *DatabaseEndpoint {
	if in == nil {
		return nil
	}
	out := new(DatabaseEndpoint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DatabaseEndpoint) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseEndpointList) DeepCopyInto(out *DatabaseEndpointList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DatabaseEndpoint, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseEndpointList.
func (in *DatabaseEndpointList) DeepCopy() *DatabaseEndpointList {
	if in == nil {
		return nil
	}
	out := new(DatabaseEndpointList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DatabaseEndpointList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseEndpointSpec) DeepCopyInto(out *DatabaseEndpointSpec) {
	*out = *in
	in.Database.DeepCopyInto(&out.Database)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseEndpointSpec.
func (in *DatabaseEndpointSpec) DeepCopy() *DatabaseEndpointSpec {
	if in == nil {
		return nil
	}
	out := new(DatabaseEndpointSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseEndpointStatus) DeepCopyInto(out *DatabaseEndpointStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseEndpointStatus.
func (in *DatabaseEndpointStatus) DeepCopy() *DatabaseEndpointStatus {
	if in == nil {
		return nil
	}
	out := new(DatabaseEndpointStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseMySQL) DeepCopyInto(out *DatabaseMySQL) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseMySQL.
func (in *DatabaseMySQL) DeepCopy() *DatabaseMySQL {
	if in == nil {
		return nil
	}
	out := new(DatabaseMySQL)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseService) DeepCopyInto(out *DatabaseService) {
	*out = *in
	if in.DatabaseMySQL != nil {
		in, out := &in.DatabaseMySQL, &out.DatabaseMySQL
		*out = new(DatabaseMySQL)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseService.
func (in *DatabaseService) DeepCopy() *DatabaseService {
	if in == nil {
		return nil
	}
	out := new(DatabaseService)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseStorage) DeepCopyInto(out *DatabaseStorage) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseStorage.
func (in *DatabaseStorage) DeepCopy() *DatabaseStorage {
	if in == nil {
		return nil
	}
	out := new(DatabaseStorage)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseStrategy) DeepCopyInto(out *DatabaseStrategy) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseStrategy.
func (in *DatabaseStrategy) DeepCopy() *DatabaseStrategy {
	if in == nil {
		return nil
	}
	out := new(DatabaseStrategy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseTableStrategy) DeepCopyInto(out *DatabaseTableStrategy) {
	*out = *in
	out.TableStrategy = in.TableStrategy
	out.DatabaseStrategy = in.DatabaseStrategy
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseTableStrategy.
func (in *DatabaseTableStrategy) DeepCopy() *DatabaseTableStrategy {
	if in == nil {
		return nil
	}
	out := new(DatabaseTableStrategy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalance) DeepCopyInto(out *LoadBalance) {
	*out = *in
	if in.ReadWriteSplitting != nil {
		in, out := &in.ReadWriteSplitting, &out.ReadWriteSplitting
		*out = new(ReadWriteSplitting)
		(*in).DeepCopyInto(*out)
	}
	if in.SimpleLoadBalance != nil {
		in, out := &in.SimpleLoadBalance, &out.SimpleLoadBalance
		*out = new(SimpleLoadBalance)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalance.
func (in *LoadBalance) DeepCopy() *LoadBalance {
	if in == nil {
		return nil
	}
	out := new(LoadBalance)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MasterHighAvailability) DeepCopyInto(out *MasterHighAvailability) {
	*out = *in
	if in.ConnectionProbe != nil {
		in, out := &in.ConnectionProbe, &out.ConnectionProbe
		*out = new(ConnectionProbe)
		(*in).DeepCopyInto(*out)
	}
	if in.PingProbe != nil {
		in, out := &in.PingProbe, &out.PingProbe
		*out = new(PingProbe)
		(*in).DeepCopyInto(*out)
	}
	if in.ReplicationLagProbe != nil {
		in, out := &in.ReplicationLagProbe, &out.ReplicationLagProbe
		*out = new(ReplicationLagProbe)
		(*in).DeepCopyInto(*out)
	}
	if in.ReadOnlyProbe != nil {
		in, out := &in.ReadOnlyProbe, &out.ReadOnlyProbe
		*out = new(ReadOnlyProbe)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MasterHighAvailability.
func (in *MasterHighAvailability) DeepCopy() *MasterHighAvailability {
	if in == nil {
		return nil
	}
	out := new(MasterHighAvailability)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQL) DeepCopyInto(out *MySQL) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQL.
func (in *MySQL) DeepCopy() *MySQL {
	if in == nil {
		return nil
	}
	out := new(MySQL)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PingProbe) DeepCopyInto(out *PingProbe) {
	*out = *in
	if in.Probe != nil {
		in, out := &in.Probe, &out.Probe
		*out = new(Probe)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PingProbe.
func (in *PingProbe) DeepCopy() *PingProbe {
	if in == nil {
		return nil
	}
	out := new(PingProbe)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Probe) DeepCopyInto(out *Probe) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Probe.
func (in *Probe) DeepCopy() *Probe {
	if in == nil {
		return nil
	}
	out := new(Probe)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QoSClaim) DeepCopyInto(out *QoSClaim) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	out.Spec = in.Spec
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QoSClaim.
func (in *QoSClaim) DeepCopy() *QoSClaim {
	if in == nil {
		return nil
	}
	out := new(QoSClaim)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *QoSClaim) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QoSClaimList) DeepCopyInto(out *QoSClaimList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]QoSClaim, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QoSClaimList.
func (in *QoSClaimList) DeepCopy() *QoSClaimList {
	if in == nil {
		return nil
	}
	out := new(QoSClaimList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *QoSClaimList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QoSClaimSpec) DeepCopyInto(out *QoSClaimSpec) {
	*out = *in
	out.TrafficQoS = in.TrafficQoS
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QoSClaimSpec.
func (in *QoSClaimSpec) DeepCopy() *QoSClaimSpec {
	if in == nil {
		return nil
	}
	out := new(QoSClaimSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QoSClaimStatus) DeepCopyInto(out *QoSClaimStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QoSClaimStatus.
func (in *QoSClaimStatus) DeepCopy() *QoSClaimStatus {
	if in == nil {
		return nil
	}
	out := new(QoSClaimStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QoSGroup) DeepCopyInto(out *QoSGroup) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QoSGroup.
func (in *QoSGroup) DeepCopy() *QoSGroup {
	if in == nil {
		return nil
	}
	out := new(QoSGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReadOnlyProbe) DeepCopyInto(out *ReadOnlyProbe) {
	*out = *in
	if in.Probe != nil {
		in, out := &in.Probe, &out.Probe
		*out = new(Probe)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReadOnlyProbe.
func (in *ReadOnlyProbe) DeepCopy() *ReadOnlyProbe {
	if in == nil {
		return nil
	}
	out := new(ReadOnlyProbe)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReadWriteDiscovery) DeepCopyInto(out *ReadWriteDiscovery) {
	*out = *in
	if in.MasterHighAvailability != nil {
		in, out := &in.MasterHighAvailability, &out.MasterHighAvailability
		*out = new(MasterHighAvailability)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReadWriteDiscovery.
func (in *ReadWriteDiscovery) DeepCopy() *ReadWriteDiscovery {
	if in == nil {
		return nil
	}
	out := new(ReadWriteDiscovery)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReadWriteSplitting) DeepCopyInto(out *ReadWriteSplitting) {
	*out = *in
	if in.Static != nil {
		in, out := &in.Static, &out.Static
		*out = new(ReadWriteSplittingStatic)
		(*in).DeepCopyInto(*out)
	}
	if in.Dynamic != nil {
		in, out := &in.Dynamic, &out.Dynamic
		*out = new(ReadWriteSplittingDynamic)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReadWriteSplitting.
func (in *ReadWriteSplitting) DeepCopy() *ReadWriteSplitting {
	if in == nil {
		return nil
	}
	out := new(ReadWriteSplitting)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReadWriteSplittingDynamic) DeepCopyInto(out *ReadWriteSplittingDynamic) {
	*out = *in
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]ReadWriteSplittingRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	in.Discovery.DeepCopyInto(&out.Discovery)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReadWriteSplittingDynamic.
func (in *ReadWriteSplittingDynamic) DeepCopy() *ReadWriteSplittingDynamic {
	if in == nil {
		return nil
	}
	out := new(ReadWriteSplittingDynamic)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReadWriteSplittingGroup) DeepCopyInto(out *ReadWriteSplittingGroup) {
	*out = *in
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]ReadWriteSplittingRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReadWriteSplittingGroup.
func (in *ReadWriteSplittingGroup) DeepCopy() *ReadWriteSplittingGroup {
	if in == nil {
		return nil
	}
	out := new(ReadWriteSplittingGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReadWriteSplittingRule) DeepCopyInto(out *ReadWriteSplittingRule) {
	*out = *in
	if in.Regex != nil {
		in, out := &in.Regex, &out.Regex
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReadWriteSplittingRule.
func (in *ReadWriteSplittingRule) DeepCopy() *ReadWriteSplittingRule {
	if in == nil {
		return nil
	}
	out := new(ReadWriteSplittingRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReadWriteSplittingStatic) DeepCopyInto(out *ReadWriteSplittingStatic) {
	*out = *in
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]ReadWriteSplittingRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReadWriteSplittingStatic.
func (in *ReadWriteSplittingStatic) DeepCopy() *ReadWriteSplittingStatic {
	if in == nil {
		return nil
	}
	out := new(ReadWriteSplittingStatic)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplicationLagProbe) DeepCopyInto(out *ReplicationLagProbe) {
	*out = *in
	if in.Probe != nil {
		in, out := &in.Probe, &out.Probe
		*out = new(Probe)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplicationLagProbe.
func (in *ReplicationLagProbe) DeepCopy() *ReplicationLagProbe {
	if in == nil {
		return nil
	}
	out := new(ReplicationLagProbe)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShardingRule) DeepCopyInto(out *ShardingRule) {
	*out = *in
	if in.ReadWriteSplittingGroup != nil {
		in, out := &in.ReadWriteSplittingGroup, &out.ReadWriteSplittingGroup
		*out = make([]ReadWriteSplittingGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	in.ActualDatanodes.DeepCopyInto(&out.ActualDatanodes)
	if in.TableStrategy != nil {
		in, out := &in.TableStrategy, &out.TableStrategy
		*out = new(TableStrategy)
		**out = **in
	}
	if in.DatabaseStrategy != nil {
		in, out := &in.DatabaseStrategy, &out.DatabaseStrategy
		*out = new(DatabaseStrategy)
		**out = **in
	}
	if in.DatabaseTableStrategy != nil {
		in, out := &in.DatabaseTableStrategy, &out.DatabaseTableStrategy
		*out = new(DatabaseTableStrategy)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShardingRule.
func (in *ShardingRule) DeepCopy() *ShardingRule {
	if in == nil {
		return nil
	}
	out := new(ShardingRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SimpleLoadBalance) DeepCopyInto(out *SimpleLoadBalance) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SimpleLoadBalance.
func (in *SimpleLoadBalance) DeepCopy() *SimpleLoadBalance {
	if in == nil {
		return nil
	}
	out := new(SimpleLoadBalance)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableStrategy) DeepCopyInto(out *TableStrategy) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableStrategy.
func (in *TableStrategy) DeepCopy() *TableStrategy {
	if in == nil {
		return nil
	}
	out := new(TableStrategy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrafficQoS) DeepCopyInto(out *TrafficQoS) {
	*out = *in
	out.QoSGroup = in.QoSGroup
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrafficQoS.
func (in *TrafficQoS) DeepCopy() *TrafficQoS {
	if in == nil {
		return nil
	}
	out := new(TrafficQoS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrafficStrategy) DeepCopyInto(out *TrafficStrategy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrafficStrategy.
func (in *TrafficStrategy) DeepCopy() *TrafficStrategy {
	if in == nil {
		return nil
	}
	out := new(TrafficStrategy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TrafficStrategy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrafficStrategyList) DeepCopyInto(out *TrafficStrategyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TrafficStrategy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrafficStrategyList.
func (in *TrafficStrategyList) DeepCopy() *TrafficStrategyList {
	if in == nil {
		return nil
	}
	out := new(TrafficStrategyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TrafficStrategyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrafficStrategySpec) DeepCopyInto(out *TrafficStrategySpec) {
	*out = *in
	if in.Selector != nil {
		in, out := &in.Selector, &out.Selector
		*out = new(v1.LabelSelector)
		(*in).DeepCopyInto(*out)
	}
	if in.LoadBalance != nil {
		in, out := &in.LoadBalance, &out.LoadBalance
		*out = new(LoadBalance)
		(*in).DeepCopyInto(*out)
	}
	if in.CircuitBreaks != nil {
		in, out := &in.CircuitBreaks, &out.CircuitBreaks
		*out = make([]CircuitBreak, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConcurrencyControls != nil {
		in, out := &in.ConcurrencyControls, &out.ConcurrencyControls
		*out = make([]ConcurrencyControl, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrafficStrategySpec.
func (in *TrafficStrategySpec) DeepCopy() *TrafficStrategySpec {
	if in == nil {
		return nil
	}
	out := new(TrafficStrategySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrafficStrategyStatus) DeepCopyInto(out *TrafficStrategyStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrafficStrategyStatus.
func (in *TrafficStrategyStatus) DeepCopy() *TrafficStrategyStatus {
	if in == nil {
		return nil
	}
	out := new(TrafficStrategyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ValueFrom) DeepCopyInto(out *ValueFrom) {
	*out = *in
	if in.ValueFromReadWriteSplitting != nil {
		in, out := &in.ValueFromReadWriteSplitting, &out.ValueFromReadWriteSplitting
		*out = new(ValueFromReadWriteSplitting)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ValueFrom.
func (in *ValueFrom) DeepCopy() *ValueFrom {
	if in == nil {
		return nil
	}
	out := new(ValueFrom)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ValueFromReadWriteSplitting) DeepCopyInto(out *ValueFromReadWriteSplitting) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ValueFromReadWriteSplitting.
func (in *ValueFromReadWriteSplitting) DeepCopy() *ValueFromReadWriteSplitting {
	if in == nil {
		return nil
	}
	out := new(ValueFromReadWriteSplitting)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ValueSourceType) DeepCopyInto(out *ValueSourceType) {
	*out = *in
	if in.ActualDatanodesExpressionValue != nil {
		in, out := &in.ActualDatanodesExpressionValue, &out.ActualDatanodesExpressionValue
		*out = new(ActualDatanodesExpressionValue)
		**out = **in
	}
	if in.ActualDatanodesNodeValue != nil {
		in, out := &in.ActualDatanodesNodeValue, &out.ActualDatanodesNodeValue
		*out = new(ActualDatanodesNodeValue)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ValueSourceType.
func (in *ValueSourceType) DeepCopy() *ValueSourceType {
	if in == nil {
		return nil
	}
	out := new(ValueSourceType)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualDatabase) DeepCopyInto(out *VirtualDatabase) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualDatabase.
func (in *VirtualDatabase) DeepCopy() *VirtualDatabase {
	if in == nil {
		return nil
	}
	out := new(VirtualDatabase)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VirtualDatabase) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualDatabaseList) DeepCopyInto(out *VirtualDatabaseList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VirtualDatabase, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualDatabaseList.
func (in *VirtualDatabaseList) DeepCopy() *VirtualDatabaseList {
	if in == nil {
		return nil
	}
	out := new(VirtualDatabaseList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VirtualDatabaseList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualDatabaseService) DeepCopyInto(out *VirtualDatabaseService) {
	*out = *in
	in.DatabaseService.DeepCopyInto(&out.DatabaseService)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualDatabaseService.
func (in *VirtualDatabaseService) DeepCopy() *VirtualDatabaseService {
	if in == nil {
		return nil
	}
	out := new(VirtualDatabaseService)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualDatabaseSpec) DeepCopyInto(out *VirtualDatabaseSpec) {
	*out = *in
	if in.Services != nil {
		in, out := &in.Services, &out.Services
		*out = make([]VirtualDatabaseService, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualDatabaseSpec.
func (in *VirtualDatabaseSpec) DeepCopy() *VirtualDatabaseSpec {
	if in == nil {
		return nil
	}
	out := new(VirtualDatabaseSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualDatabaseStatus) DeepCopyInto(out *VirtualDatabaseStatus) {
	*out = *in
	if in.Endpoints != nil {
		in, out := &in.Endpoints, &out.Endpoints
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualDatabaseStatus.
func (in *VirtualDatabaseStatus) DeepCopy() *VirtualDatabaseStatus {
	if in == nil {
		return nil
	}
	out := new(VirtualDatabaseStatus)
	in.DeepCopyInto(out)
	return out
}
